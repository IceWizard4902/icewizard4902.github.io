from PIL import Image
from randcrack import RandCrack
import random 
from tqdm import tqdm 

rc = RandCrack()

def xor(a):
	return a[0] ^ a[1]

def xor_tuple(a, b):
	return tuple(i for i in map(xor, zip(*[a, b])))

def rgba2int(rgba: tuple):
	ret = 0
	for i in range(3, -1, -1):
		ret += rgba[i] << 8 * (3 - i)
	return ret

def int2rgba(n):
	r, g, b, a = tuple([(n >> 8*i) & 0xff for i in range(3, -1, -1)])
	return (r, g, b, a)

part = Image.open('part.png')
out = Image.open('out.png')

px_part = part.load()
px_out = out.load()

x_len, y_len = part.size 

for y in range(1):
    for x in range(x_len - 96):
        part_r, part_g, part_b, part_a = px_part[x, y]
        out_r, out_g, out_b, out_a = px_out[x, y]

        key = xor_tuple((part_r, part_g, part_b, part_a), (out_r, out_g, out_b, out_a))
        key = rgba2int(key)
        rc.submit(key)

new = Image.new('RGBA', (x_len, y_len), 'white')
px_flag = new.load()

for y in tqdm(range(y_len)):
    for x in range(x_len):
        if (y == 0 and x in range(x_len - 96)):
            continue
        rand = rc.predict_getrandbits(32)
        rr, rg, rb, ra = int2rgba(rand)
        r, g, b, a = px_part[x, y]
        new_pix = xor_tuple((rr, rg, rb, ra), (r, g, b, a))
        px_flag[x, y] = new_pix

new.save('flag.png')
        